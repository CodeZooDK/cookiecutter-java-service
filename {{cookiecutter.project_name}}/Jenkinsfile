
node { 
    def buildDetails = checkoutWithDetails(buildNumber:env.BUILD_NUMBER)

    stage('Build') {
        withMaven(
            maven: 'Maven 3',
            mavenSettingsConfig: 'maven_settings',
            jdk: 'JDK 8') {

            // Force version and artifactid
            def pom = readMavenPom file: 'pom.xml'
            pom.artifactId = build.name;
   	    pom.name = build.name;

            writeMavenPom model: pom

            sh "mvn versions:set -DnewVersion=${version}"

            // Run the maven build
            sh "mvn clean install"
        }
    }

    if(env.BRANCH_NAME == "master") {
        stage('SonarQube analysis') {
            // requires SonarQube Scanner 2.8+
            def scannerHome = tool 'SonarQube Scanner 2.8';
            withSonarQubeEnv('SonarQube Server') {
                withMaven(maven: 'Maven 3',
                        mavenSettingsConfig: 'maven_settings',
                        jdk: 'JDK 8') {
                    sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar'
                }
            }
        }

        buildDockerImage(buildDetails)
    }
}
